In the [[d12frosted:/posts/2020-06-25-task-management-with-roam-vol3][previous article]] we covered automatic tagging of notes related to a specific person, and today we are going to cover automatic tagging of an org-mode heading upon insertion of link related to a person. To put it simple, when I mention someone in the task, I would love this task to be automatically tagged with that persons name. As they say, it's better to see once, than imagine multiple times, so here is a screencast.

[[file:/images/2020-07-07-task-management-with-roam-vol4/2022-07-19-21-13-09-org-notes-insert.gif]]

*Change Log:*

- ~[2021-01-24 Sun]~: Since some of the functionality mentioned in the original article was merged to =org-roam=, all code is updated to reflect the current state of affairs.
- ~[2021-03-02 Tue]~: Update naming convention to match [[https://github.com/d12frosted/environment/tree/master/emacs][personal configurations]].
- ~[2021-05-10 Mon]~: Update post to reflect changes in [[https://github.com/org-roam/org-roam/pull/1401][org-roam v2]]. Previous version of this article is available on [[https://github.com/d12frosted/d12frosted.io/blob/c16870cab6ebbaafdf73c7c3589abbd27c20ac52/posts/2020-07-07-task-management-with-roam-vol4.org][GitHub]].
- ~[2021-11-19 Fri]~: Update post to reflect [[https://github.com/d12frosted/vulpea/commit/8ff428f2e9561fdc448627fe780be03a661cc52e][inclusion]] of =vulpea-insert= function to =vulpea= library. You can find previous version of this article in [[https://github.com/d12frosted/d12frosted.io/blob/2d3dad81988e838b8159761cd420bb95ed5bdd83/posts/2020-07-07-task-management-with-roam-vol4.org][git history]].

#+BEGIN_HTML
<!--more-->
#+END_HTML

Once could just write an advice for =org-roam-node-insert= by using a relatively recent [[https://github.com/org-roam/org-roam/pull/839][change]] that makes this function to return what was inserted. This also uses name manipulation from the [[d12frosted:/posts/2020-06-25-task-management-with-roam-vol3][previous article]] and tags lookup from [[d12frosted:/posts/2020-06-10-org-roam-tags][Org-roam tags]] article.

#+begin_src emacs-lisp
  (defun org-roam-node-insert-wrapper (fn)
    "Insert a link to the note using FN.

  If inserted node has PEOPLE tag on it, tag the current outline
  accordingly."
    (interactive)
    (when-let*
        ((node (funcall fn))
         (title (org-roam-node-title node))
         (tags (org-roam-node-tags node)))
      (when (seq-contains-p tags "people")
        (save-excursion
          (ignore-errors
            (org-back-to-heading)
            (org-set-tags
             (seq-uniq
              (cons
               (vulpea--title-to-tag title)
               (org-get-tags nil t)))))))))

  (advice-add
   #'org-roam-node-insert
   :around
   #'org-roam-node-insert-wrapper)
#+end_src

The implementation is straight-forward. We start with calling =fn= (e.g. =org-roam-node-insert=) that asks for the note to insert. Then we parse result and query the roam tags to understand if the inserted note is related to a person. And if the answer is yes, we use =org-set-tags= to automatically tag the heading.

And while advicing is powerful tool and allows us to solve the problem, there is slightly different, less intrusive and composable solution provided by =vulpea= library - =vulpea-insert= function that acts like =org-roam-node-insert=, but provides ability setup hooks on insertion. First, we define a handler (pretty much the same as =org-roam-node-insert-wrapper= but without any calls to insertion function).

#+begin_src emacs-lisp
  (defun my-vulpea-insert-handle (note)
    "Hook to be called on NOTE after `vulpea-insert'."
    (when-let* ((title (vulpea-note-title note))
                (tags (vulpea-note-tags note)))
      (when (seq-contains-p tags "people")
        (save-excursion
          (ignore-errors
            (org-back-to-heading)
            (when (eq 'todo (org-element-property
                             :todo-type
                             (org-element-at-point)))
              (org-set-tags
               (seq-uniq
                (cons
                 (vulpea--title-to-tag title)
                 (org-get-tags nil t))))))))))
#+end_src

And then you just need to add it as a hook:

#+begin_src emacs-lisp
  (add-hook 'vulpea-insert-handle-functions
            #'my-vulpea-insert-handle)
#+end_src

With this approach you can add as many handlers as you wish without the need to grow your advice/wrapper too much.

* Complete solution
:PROPERTIES:
:ID:                     614f7140-bcc1-46db-b454-97e381b88257
:END:

#+begin_src emacs-lisp
  (defun my-vulpea-insert-handle (note)
    "Hook to be called on NOTE after `vulpea-insert'."
    (when-let* ((title (vulpea-note-title note))
                (tags (vulpea-note-tags note)))
      (when (seq-contains-p tags "people")
        (save-excursion
          (ignore-errors
            (org-back-to-heading)
            (when (eq 'todo (org-element-property
                             :todo-type
                             (org-element-at-point)))
              (org-set-tags
               (seq-uniq
                (cons
                 (vulpea--title-to-tag title)
                 (org-get-tags nil t))))))))))

  (defun vulpea--title-to-tag (title)
    "Convert TITLE to tag."
    (concat "@" (s-replace " " "" title)))

  (add-hook 'vulpea-insert-handle-functions
            #'my-vulpea-insert-handle)

#+end_src

* Task Management with org-roam Series
:PROPERTIES:
:ID:                     88d27bea-d629-4b1d-a0b1-0658ac23d1fd
:END:

1. [[d12frosted:/posts/2020-06-23-task-management-with-roam-vol1][Path to Roam]]
2. [[d12frosted:/posts/2020-06-24-task-management-with-roam-vol2][Categories]]
3. [[d12frosted:/posts/2020-06-25-task-management-with-roam-vol3][FILETAGS]]
4. [[d12frosted:/posts/2020-07-07-task-management-with-roam-vol4][Automatic tagging]]
5. [[d12frosted:/posts/2021-01-16-task-management-with-roam-vol5][Dynamic and fast agenda]]
6. [[d12frosted:/posts/2021-01-24-task-management-with-roam-vol6][Select a person and view related tasks]]
7. [[d12frosted:/posts/2021-05-21-task-management-with-roam-vol7][Capture]]

* References
:PROPERTIES:
:ID:                     e1c65c7f-db37-473b-ae57-2ea12e2b2aa5
:END:

- =org-roam= documentation on [[https://github.com/org-roam/org-roam][GitHub]].
- =org-mode= documentation on the [[https://orgmode.org][official site]].
- [[d12frosted:/posts/2020-06-10-org-roam-tags][Org-roam tags]] post.
- personal configurations on [[https://github.com/d12frosted/environment/blob/master/emacs/lisp/%2Borg-notes.el][GitHub]].

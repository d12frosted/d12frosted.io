{
  "publish": true,
  "hide": null,
  "pinned": null,
  "title": "Readings Vol. I: precondition encoding",
  "id": "bdbb1ca2-8ecb-4d5f-b1ca-6e192ff566ab",
  "related": null,
  "update": "2025-01-31",
  "date": "2020-02-01",
  "authors": [
    "Boris Buliga"
  ],
  "description": "A look at different ways to handle preconditions in Haskell libraries, exploring approaches from simple Maybe types to more sophisticated type-level guarantees. Through examples from Alexis King's \"Parse, don't validate\" and Matt Noonan's \"Ghosts of Departed Proofs\", I discuss how we can leverage Haskell's type system to make illegal states unrepresentable while maintaining runtime performance.",
  "tags": [
    "haskell",
    "readings"
  ]
}
